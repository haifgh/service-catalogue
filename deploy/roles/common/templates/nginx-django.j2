
# WebSocket proxying
map $http_upgrade $connection_upgrade {
    default         upgrade;
    ''              close;
}


upstream {{ app_name }}_backend_server {
  #href : http://nginx.org/en/docs/http/ngx_http_upstream_module.html#server
  # fail_timeout=0 means we always retry an upstream even if it failed
  # to return a good HTTP response (in case the Unicorn master nukes a
  # single worker for timing out).

  server 127.0.0.1:8000 fail_timeout=0;
}


server {
    {% if https %}
    listen 443 ssl;
    ssl on;
    ssl_certificate {{ ssl_certificate_path }};
    ssl_certificate_key {{ ssl_certificate_key_path }};
    ssl_protocols TLSv1.2;

    #########SSL settings finish#############
    #https://scotthelme.co.uk/hardening-your-http-response-headers/#x-content-type-options
    add_header X-Content-Type-Options "nosniff" always;
    #X-Xss-Protection
    add_header X-Xss-Protection "1; mode=block" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains";
    {% else %}
    listen 80;
    {% endif %}

    server_name {{domain}};
    
    {% if cors_disabled %}
    add_header 'Access-Control-Allow-Origin' '*' always;
    add_header 'Access-Control-Allow-Credentials' 'true' always;
    add_header 'Access-Control-Allow-Methods' '*' always;
    add_header 'Access-Control-Allow-Headers' 'content-type, authorization' always;
    {% endif %}

    location /static/ {
        autoindex off;
        alias {{ backend_app_dir }}/staticfiles/;
    }

    location / {
        #to hide the port number in case of redirects:
        #http://serverfault.com/questions/610848/reverse-proxied-nginx-exposing-port-number-when-redirecting-directory-index-requ
        port_in_redirect off;

        # an HTTP header important enough to have its own Wikipedia entry:
        # http://en.wikipedia.org/wiki/X-Forwarded-For
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        
        {% if https %}
        # enable this if and only if you use HTTPS, this helps Rack
        # set the proper protocol for doing redirects:
        proxy_set_header X-Forwarded-Proto https;
        {% endif %}
        
        # pass the Host: header from the client right along so redirects
        # can be set properly within the Rack application
        proxy_set_header Host $http_host;

        # Backend django server
        proxy_set_header REMOTE_ADDR $remote_addr;
        # Try to serve static files from nginx, no point in making an
        # *application* server like Gunicorn serve static files.
        if (!-f $request_filename) {
            # http://stackoverflow.com/questions/224664/difference-between-proxy-server-and-reverse-proxy-server
            proxy_pass http://{{ app_name }}_backend_server;
            break;
        }
    }

    sendfile off;
    expires -1;
    gzip on;
    gzip_disable "msie6";
    gzip_vary on;
    client_max_body_size 25M;
    access_log /var/log/nginx/{{ app_name }}-access.log;
    error_log /var/log/nginx/{{ app_name }}-error.log;
    #Remove server headers:http://serverfault.com/questions/214242/can-i-hide-all-server-os-info
    server_tokens off;
}
